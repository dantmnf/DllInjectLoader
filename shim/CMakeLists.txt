project(Shim C)

option(SHIM_FORCE_ASM_ENTRY "Force using assembly defined entry")
set(SHIM_FORCE_ASM_LANGUAGE "" CACHE STRING "")

add_library(shim_c shim.c shim_declare.h shim.def)

if(CMAKE_C_COMPILER_ID STREQUAL "GNU" OR CMAKE_C_COMPILER_ID STREQUAL "Clang")
    set(_SHIM_USE_ASM_ENTRY "${SHIM_FORCE_ASM_ENTRY}")
    set(_SHIM_ASM_LANG ASM_NASM)
elseif(CMAKE_C_COMPILER_ID STREQUAL "MSVC")
    if(MSVC_CXX_ARCHITECTURE_ID STREQUAL "X86")
        set(_SHIM_USE_ASM_ENTRY "${SHIM_FORCE_ASM_ENTRY}")
        set(_SHIM_ASM_LANG ASM_MASM)
    elseif(MSVC_CXX_ARCHITECTURE_ID STREQUAL "AMD64" OR MSVC_CXX_ARCHITECTURE_ID STREQUAL "x64")
        set(_SHIM_USE_ASM_ENTRY ON)
        set(_SHIM_ASM_LANG ASM_MASM)
    else()
        message(FATAL_ERROR "no shim implementation for MSVC targeting ${MSVC_CXX_ARCHITECTURE_ID}")
    endif()
endif()

if(_SHIM_USE_ASM_ENTRY)
    if(NOT SHIM_FORCE_ASM_LANGUAGE STREQUAL "")
        set(_SHIM_ASM_LANG "${SHIM_FORCE_ASM_LANGUAGE}")
    endif()
    message(STATUS "Using assembly entry in ${_SHIM_ASM_LANG}")
    enable_language("${_SHIM_ASM_LANG}")
    if(_SHIM_ASM_LANG STREQUAL "ASM_MASM")
        set(SHIM_ASM_SOURCES shim_masm.asm)
    elseif(_SHIM_ASM_LANG STREQUAL "ASM_NASM")
        set(SHIM_ASM_SOURCES shim_nasm.asm)
    else()
        message(FATAL_ERROR "no shim implementation available")
    endif()
    set(SHIM_ASM_SOURCES "${SHIM_ASM_SOURCES}" shim_declare.inc)
    add_library(shim_asm OBJECT "${SHIM_ASM_SOURCES}")
    if(_SHIM_ASM_LANG STREQUAL "ASM_NASM")
        target_include_directories(shim_asm PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}")
    endif()
    target_compile_definitions(shim_c PRIVATE SHIM_USE_EXTERNAL_ENTRY)
    target_link_libraries(shim_c shim_asm)
endif()

set(SHIM_MODULE_DEFINITION "${Shim_SOURCE_DIR}/shim.def")
